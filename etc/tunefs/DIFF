*** tunefs.c	Mon Sep 15 15:05:10 1986
--- /usr/staff/tadl/nfs/usr.etc/tunefs.c	Sun May 18 18:58:44 1986
***************
*** 1,19 ****
--- 1,7 ----
-</*
-< * Copyright (c) 1983 Regents of the University of California.
-< * All rights reserved.  The Berkeley software License Agreement
-< * specifies the terms and conditions for redistribution.
-< */
-<
  #ifndef lint
!<char copyright[] =
!<"@(#) Copyright (c) 1983 Regents of the University of California.\n\
!< All rights reserved.\n";
!<#endif not lint
  
-<#ifndef lint
-<static char sccsid[] = "@(#)tunefs.c	5.3 (Berkeley) 9/11/85";
-<#endif not lint
-<
  /*
   * tunefs: change layout parameters to an existing file system.
   */
---------------
  #ifndef lint
!>static	char *sccsid = "@(#)tunefs.c 1.1 85/05/30 SMI"; /* from UCB 4.4 */
!>#endif lint
  
  /*
   * tunefs: change layout parameters to an existing file system.
   */
***************
*** 20,27 ****
--- 8,17 ----
  
  #include <sys/param.h>
  #include <sys/stat.h>
!<#include <sys/fs.h>
!<#include <sys/inode.h>
  
  #include <stdio.h>
  #include <fstab.h>
---------------
  
  #include <sys/param.h>
  #include <sys/stat.h>
!>#include <ufs/fs.h>
!>#include <sys/time.h>
!>#include <sys/vnode.h>
!>#include <ufs/inode.h>
  
  #include <stdio.h>
  #include <fstab.h>
***************
*** 42,50 ****
--- 32,40 ----
  	struct stat st;
  	int i;
  	int Aflag = 0;
!<	struct fstab *fs;
!<	char *chg[2], device[MAXPATHLEN];
  	extern char *sprintf();
  
  	argc--, argv++; 
  	if (argc < 2)
---------------
  	struct stat st;
  	int i;
  	int Aflag = 0;
!>	char device[MAXPATHLEN];
  	extern char *sprintf();
+>	struct fstab *fs;
  
  	argc--, argv++; 
  	if (argc < 2)
***************
*** 132,177 ****
--- 122,129 ----
  					"%s changes from %d%% to %d%%\n",
  					name, sblock.fs_minfree, i);
  				sblock.fs_minfree = i;
-<				if (i >= 10 && sblock.fs_optim == FS_OPTSPACE)
-<					fprintf(stdout, "should optimize %s",
-<					    "for time with minfree >= 10%\n");
-<				if (i < 10 && sblock.fs_optim == FS_OPTTIME)
-<					fprintf(stdout, "should optimize %s",
-<					    "for space with minfree < 10%\n");
  				continue;
  
-<			case 'o':
-<				name = "optimization preference";
-<				if (argc < 1)
-<					fatal("-o: missing %s", name);
-<				argc--, argv++;
-<				chg[FS_OPTSPACE] = "space";
-<				chg[FS_OPTTIME] = "time";
-<				if (strcmp(*argv, chg[FS_OPTSPACE]) == 0)
-<					i = FS_OPTSPACE;
-<				else if (strcmp(*argv, chg[FS_OPTTIME]) == 0)
-<					i = FS_OPTTIME;
-<				else
-<					fatal("%s: bad %s (options are `space' or `time')",
-<						*argv, name);
-<				if (sblock.fs_optim == i) {
-<					fprintf(stdout,
-<						"%s remains unchanged as %s\n",
-<						name, chg[i]);
-<					continue;
-<				}
-<				fprintf(stdout,
-<					"%s changes from %s to %s\n",
-<					name, chg[sblock.fs_optim], chg[i]);
-<				sblock.fs_optim = i;
-<				if (sblock.fs_minfree >= 10 && i == FS_OPTSPACE)
-<					fprintf(stdout, "should optimize %s",
-<					    "for time with minfree >= 10%\n");
-<				if (sblock.fs_minfree < 10 && i == FS_OPTTIME)
-<					fprintf(stdout, "should optimize %s",
-<					    "for space with minfree < 10%\n");
-<				continue;
-<
  			default:
  				fatal("-%c: unknown flag", *cp);
  			}
---------------
  			default:
  				fatal("-%c: unknown flag", *cp);
  			}
***************
*** 192,198 ****
--- 144,149 ----
  	fprintf(stderr, "\t-d rotational delay between contiguous blocks\n");
  	fprintf(stderr, "\t-e maximum blocks per file in a cylinder group\n");
  	fprintf(stderr, "\t-m minimum percentage of free space\n");
-<	fprintf(stderr, "\t-o optimization preference (`space' or `time')\n");
  	exit(2);
  }
  
---------------
  	exit(2);
  }
  
