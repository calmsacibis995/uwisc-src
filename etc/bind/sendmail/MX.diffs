*** /nbsd/usr/src/usr.lib/sendmail/src/Makefile.m4	Fri May  2 16:28:50 1986
--- ./Makefile.m4	Mon Jul 21 13:41:16 1986
***************
*** 7,13 ****
  #  All rights reserved.  The Berkeley software License Agreement
  #  specifies the terms and conditions for redistribution.
  #
! #	@(#)Makefile.m4	5.10 (Berkeley) 5/2/86
  #
  #
  #  SENDMAIL Makefile.
--- 7,13 ----
  #  All rights reserved.  The Berkeley software License Agreement
  #  specifies the terms and conditions for redistribution.
  #
! #	@(#)Makefile.m4	5.11 (Berkeley) 7/21/86
  #
  #
  #  SENDMAIL Makefile.
***************
*** 21,27 ****
  OBJS1=	conf.o main.o collect.o parseaddr.o alias.o deliver.o \
  	savemail.o err.o readcf.o stab.o headers.o recipient.o \
  	stats.o daemon.o usersmtp.o srvrsmtp.o queue.o \
! 	macro.o util.o clock.o trace.o envelope.o
  OBJS2=	sysexits.o arpadate.o convtime.o
  OBJS=	$(OBJS1) $(OBJS2)
  SRCS1=	conf.h sendmail.h \
--- 21,27 ----
  OBJS1=	conf.o main.o collect.o parseaddr.o alias.o deliver.o \
  	savemail.o err.o readcf.o stab.o headers.o recipient.o \
  	stats.o daemon.o usersmtp.o srvrsmtp.o queue.o \
! 	macro.o util.o clock.o trace.o envelope.o domain.o
  OBJS2=	sysexits.o arpadate.o convtime.o
  OBJS=	$(OBJS1) $(OBJS2)
  SRCS1=	conf.h sendmail.h \
***************
*** 28,34 ****
  	conf.c deliver.c main.c parseaddr.c err.c alias.c savemail.c \
  	sysexits.c util.c arpadate.c version.c collect.c \
  	macro.c headers.c readcf.c stab.c recipient.c stats.c daemon.c \
! 	usersmtp.c srvrsmtp.c queue.c clock.c trace.c envelope.c
  SRCS2=	TODO convtime.c
  SRCS=	Version.c $(SRCS1) $(SRCS2)
  ALL=	sendmail
--- 28,34 ----
  	conf.c deliver.c main.c parseaddr.c err.c alias.c savemail.c \
  	sysexits.c util.c arpadate.c version.c collect.c \
  	macro.c headers.c readcf.c stab.c recipient.c stats.c daemon.c \
! 	usersmtp.c srvrsmtp.c queue.c clock.c trace.c envelope.c domain.c
  SRCS2=	TODO convtime.c
  SRCS=	Version.c $(SRCS1) $(SRCS2)
  ALL=	sendmail
***************
*** 58,63 ****
--- 58,64 ----
  REL=
  
  ROOT=	root
+ GROUP=	kmem
  OBJMODE=755
  
  .c.o:
***************
*** 71,78 ****
  	size sendmail; ls -l sendmail; ifdef(`m4SCCS', `$(WHAT) < Version.o')
  
  install: all
! 	$(INSTALL) -m 4755 sendmail $(DESTDIR)/usr/lib
! 	chgrp kmem $(DESTDIR)/usr/lib/sendmail
  	$(CP) /dev/null $(DESTDIR)/usr/lib/sendmail.fc
  
  version: newversion $(OBJS) Version.c
--- 72,78 ----
  	size sendmail; ls -l sendmail; ifdef(`m4SCCS', `$(WHAT) < Version.o')
  
  install: all
! 	$(INSTALL) -m 6755 -g $(GROUP) sendmail $(DESTDIR)/usr/lib
  	$(CP) /dev/null $(DESTDIR)/usr/lib/sendmail.fc
  
  version: newversion $(OBJS) Version.c
*** /nbsd/usr/src/usr.lib/sendmail/src/conf.h	Sun Jan  5 19:57:24 1986
--- ./conf.h	Mon Jul 21 10:21:48 1986
***************
*** 7,13 ****
  **  All rights reserved.  The Berkeley software License Agreement
  **  specifies the terms and conditions for redistribution.
  **
! **	@(#)conf.h	5.7 (Berkeley) 1/5/86
  */
  
  /*
--- 7,13 ----
  **  All rights reserved.  The Berkeley software License Agreement
  **  specifies the terms and conditions for redistribution.
  **
! **	@(#)conf.h	5.8 (Berkeley) 7/21/86
  */
  
  /*
***************
*** 33,38 ****
--- 33,39 ----
  # define MAXTRUST	30		/* maximum number of trusted users */
  # define MAXUSERENVIRON	40		/* max # of items in user environ */
  # define QUEUESIZE	600		/* max # of jobs per queue run */
+ # define MAXMXHOSTS	10		/* max # of MX records */
  
  /*
  **  Compilation options.
*** /nbsd/usr/src/usr.lib/sendmail/src/sendmail.h	Fri Jan 10 21:03:25 1986
--- ./sendmail.h	Mon Jul 21 10:21:57 1986
***************
*** 7,13 ****
  **  All rights reserved.  The Berkeley software License Agreement
  **  specifies the terms and conditions for redistribution.
  **
! **	@(#)sendmail.h	5.8 (Berkeley) 1/10/86
  */
  
  /*
--- 7,13 ----
  **  All rights reserved.  The Berkeley software License Agreement
  **  specifies the terms and conditions for redistribution.
  **
! **	@(#)sendmail.h	5.9 (Berkeley) 7/21/86
  */
  
  /*
***************
*** 19,25 ****
  # ifdef _DEFINE
  # define EXTERN
  # ifndef lint
! static char SmailSccsId[] =	"@(#)sendmail.h	5.8		1/10/86";
  # endif lint
  # else  _DEFINE
  # define EXTERN extern
--- 19,25 ----
  # ifdef _DEFINE
  # define EXTERN
  # ifndef lint
! static char SmailSccsId[] =	"@(#)sendmail.h	5.9		7/21/86";
  # endif lint
  # else  _DEFINE
  # define EXTERN extern
***************
*** 526,532 ****
--- 526,534 ----
  EXTERN int	WkRecipFact;	/* multiplier for # of recipients -> priority */
  EXTERN int	WkTimeFact;	/* priority offset each time this job is run */
  EXTERN int	CheckPointLimit;	/* deliveries before checkpointing */
+ EXTERN short	nmx;			/* number of MX RRs */
  EXTERN char	*PostMasterCopy;	/* address to get errs cc's */
+ EXTERN char	*mxhosts[MAXMXHOSTS+1];	/* for MX RRs */
  EXTERN char	*TrustedUsers[MAXTRUST+1];	/* list of trusted users */
  EXTERN char	*UserEnviron[MAXUSERENVIRON+1];	/* saved user environment */
  /*
*** /nbsd/usr/src/usr.lib/sendmail/src/daemon.c	Tue May  6 18:05:09 1986
--- ./daemon.c	Mon Jul 21 10:32:06 1986
***************
*** 14,20 ****
  
  # ifndef DAEMON
  # ifndef lint
! static char	SccsId[] = "@(#)daemon.c	5.19 (Berkeley) 5/6/86	(w/o daemon mode)";
  # endif not lint
  # else
  
--- 14,20 ----
  
  # ifndef DAEMON
  # ifndef lint
! static char	SccsId[] = "@(#)daemon.c	5.21 (Berkeley) 7/21/86	(w/o daemon mode)";
  # endif not lint
  # else
  
***************
*** 25,31 ****
  # include <sys/resource.h>
  
  # ifndef lint
! static char	SccsId[] = "@(#)daemon.c	5.19 (Berkeley) 5/6/86 (with daemon mode)";
  # endif not lint
  
  /*
--- 25,31 ----
  # include <sys/resource.h>
  
  # ifndef lint
! static char	SccsId[] = "@(#)daemon.c	5.21 (Berkeley) 7/21/86 (with daemon mode)";
  # endif not lint
  
  /*
***************
*** 300,306 ****
  	FILE **outfile;
  	FILE **infile;
  {
! 	register int s;
  	int sav_errno;
  
  	/*
--- 300,308 ----
  	FILE **outfile;
  	FILE **infile;
  {
! 	register int i, s;
! 	register struct hostent *hp = (struct hostent *)NULL;
! 	extern char *inet_ntoa();
  	int sav_errno;
  
  	/*
***************
*** 331,338 ****
  	}
  	else
  	{
! 		register struct hostent *hp = gethostbyname(host);
! 
  		if (hp == NULL)
  		{
  			if (errno == ETIMEDOUT || h_errno == TRY_AGAIN)
--- 333,339 ----
  	}
  	else
  	{
! 		hp = gethostbyname(host);
  		if (hp == NULL)
  		{
  			if (errno == ETIMEDOUT || h_errno == TRY_AGAIN)
***************
*** 346,351 ****
--- 347,353 ----
  			return (EX_NOHOST);
  		}
  		bcopy(hp->h_addr, (char *) &SendmailAddress.sin_addr, hp->h_length);
+ 		i = 1;
  	}
  
  	/*
***************
*** 370,378 ****
  	**  Try to actually open the connection.
  	*/
  
  # ifdef DEBUG
  	if (tTd(16, 1))
! 		printf("makeconnection (%s)\n", host);
  # endif DEBUG
  
  	s = socket(AF_INET, SOCK_STREAM, 0);
--- 372,382 ----
  	**  Try to actually open the connection.
  	*/
  
+ again:
  # ifdef DEBUG
  	if (tTd(16, 1))
! 		printf("makeconnection (%s [%s])\n", host,
! 		    inet_ntoa(SendmailAddress.sin_addr.s_addr));
  # endif DEBUG
  
  	s = socket(AF_INET, SOCK_STREAM, 0);
***************
*** 401,406 ****
--- 405,417 ----
  	{
  		sav_errno = errno;
  		(void) close(s);
+ 		if (hp && hp->h_addr_list[i])
+ 		{
+ 			bcopy(hp->h_addr_list[i++],
+ 			    (char *)&SendmailAddress.sin_addr, hp->h_length);
+ 			goto again;
+ 		}
+ 
  		/* failure, decide if temporary or not */
  	failure:
  		switch (sav_errno)
***************
*** 522,528 ****
--- 533,544 ----
  	else
  	{
  		makelower(hbuf);
+ #ifdef MXDOMAIN
+ 		getcanonname(hbuf, hbsize);
+ 		return;
+ #else MXDOMAIN
  		hp = gethostbyname(hbuf);
+ #endif
  	}
  	if (hp != NULL)
  	{
***************
*** 529,535 ****
  		int i = strlen(hp->h_name);
  
  		if (i >= hbsize)
! 			hp->h_name[--i] = '\0';
  		(void) strcpy(hbuf, hp->h_name);
  	}
  }
--- 545,551 ----
  		int i = strlen(hp->h_name);
  
  		if (i >= hbsize)
! 			hp->h_name[hbsize - 1] = '\0';
  		(void) strcpy(hbuf, hp->h_name);
  	}
  }
*** /nbsd/usr/src/usr.lib/sendmail/src/deliver.c	Wed Apr  2 15:58:36 1986
--- ./deliver.c	Mon Jul 21 11:22:15 1986
***************
*** 9,15 ****
  */
  
  #ifndef lint
! static char	SccsId[] = "@(#)deliver.c	5.10 (Berkeley) 3/2/86";
  #endif not lint
  
  # include <signal.h>
--- 9,15 ----
  */
  
  #ifndef lint
! static char	SccsId[] = "@(#)deliver.c	5.11 (Berkeley) 7/21/86";
  #endif not lint
  
  # include <signal.h>
***************
*** 361,368 ****
  # ifdef SMTP
  	if (clever)
  	{
  		/* send the initial SMTP protocol */
! 		rcode = smtpinit(m, pv);
  
  		if (rcode == EX_OK)
  		{
--- 361,390 ----
  # ifdef SMTP
  	if (clever)
  	{
+ # ifdef MXDOMAIN
+ 		expand("\001w", buf, &buf[sizeof buf - 1], e);
+ 		if ((nmx = getmxrr(host, mxhosts, MAXMXHOSTS, buf)) < 0)
+ 		{
+ 			/*
+ 			 * Map errors into standard values
+ 			 */
+ 			if (nmx == -1)
+ 				rcode = EX_TEMPFAIL;
+ 			else if (nmx == -3)
+ 				rcode = EX_NOHOST;
+ 			else
+ 				rcode = EX_UNAVAILABLE;
+ 		}
+ 		else
+ 			rcode = EX_OK;
+ #else MXDOMAIN
+ 		nmx = 1;
+ 		mxhosts[0] = q->q_host;
+ 		rcode = EX_OK;
+ #endif
  		/* send the initial SMTP protocol */
! 		if (rcode == EX_OK)
! 			rcode = smtpinit(m, pv);
  
  		if (rcode == EX_OK)
  		{
***************
*** 710,716 ****
  		extern STAB *stab();
  #endif HOSTINFO
  #ifdef DAEMON
! 		register int i;
  		register u_short port;
  
  		CurHostName = pvp[1];
--- 732,738 ----
  		extern STAB *stab();
  #endif HOSTINFO
  #ifdef DAEMON
! 		register int i, j;
  		register u_short port;
  
  		CurHostName = pvp[1];
***************
*** 720,752 ****
  			port = atoi(pvp[2]);
  		else
  			port = 0;
  #ifdef HOSTINFO
  		/* see if we have already determined that this host is fried */
! 		st = stab(pvp[1], ST_HOST, ST_FIND);
! 		if (st == NULL || st->s_host.ho_exitstat == EX_OK)
! 			i = makeconnection(pvp[1], port, pmfile, prfile);
! 		else
! 		{
! 			i = st->s_host.ho_exitstat;
! 			errno = st->s_host.ho_errno;
! 		}
  #else HOSTINFO
! 		i = makeconnection(pvp[1], port, pmfile, prfile);
  #endif HOSTINFO
! 		if (i != EX_OK)
! 		{
  #ifdef HOSTINFO
! 			/* enter status of this host */
! 			if (st == NULL)
! 				st = stab(pvp[1], ST_HOST, ST_ENTER);
! 			st->s_host.ho_exitstat = i;
! 			st->s_host.ho_errno = errno;
  #endif HOSTINFO
! 			ExitStat = i;
! 			return (-1);
  		}
! 		else
! 			return (0);
  #else DAEMON
  		syserr("openmailer: no IPC");
  		return (-1);
--- 742,779 ----
  			port = atoi(pvp[2]);
  		else
  			port = 0;
+ 		for (j = 0; j < nmx; j++)
+ 		{
+ 			CurHostName = mxhosts[j];
  #ifdef HOSTINFO
  		/* see if we have already determined that this host is fried */
! 			st = stab(mxhosts[j], ST_HOST, ST_FIND);
! 			if (st == NULL || st->s_host.ho_exitstat == EX_OK)
! 				i = makeconnection(mxhosts[j], port, pmfile, prfile);
! 			else
! 			{
! 				i = st->s_host.ho_exitstat;
! 				errno = st->s_host.ho_errno;
! 			}
  #else HOSTINFO
! 			i = makeconnection(mxhosts[j], port, pmfile, prfile);
  #endif HOSTINFO
! 			if (i != EX_OK)
! 			{
  #ifdef HOSTINFO
! 				/* enter status of this host */
! 				if (st == NULL)
! 					st = stab(mxhosts[j], ST_HOST, ST_ENTER);
! 				st->s_host.ho_exitstat = i;
! 				st->s_host.ho_errno = errno;
  #endif HOSTINFO
! 				ExitStat = i;
! 				continue;
! 			}
! 			else
! 				return (0);
  		}
! 		return (-1);
  #else DAEMON
  		syserr("openmailer: no IPC");
  		return (-1);
*** /nbsd/usr/src/usr.lib/sendmail/src/Version.c	Fri May  2 16:32:44 1986
--- ./Version.c	Mon Jul 21 12:53:28 1986
***************
*** 9,23 ****
  */
  
  #ifndef lint
! static char	SccsId[] = "@(#)version.c	5.51 (Berkeley) 5/2/86";
  #endif not lint
  
! char	Version[] = "5.51";
  
  # ifdef COMMENT
  
  SCCS/s.version.c:
  
  D 5.51	86/05/02 16:28:28	bloom	473	472	00000/00000/00015
  statistics structure moved to its own header file so it may be used by 
  aux/mailstats
--- 9,32 ----
  */
  
  #ifndef lint
! static char	SccsId[] = "@(#)version.c	5.54 (Berkeley) 7/21/86";
  #endif not lint
  
! char	Version[] = "5.54";
  
  # ifdef COMMENT
  
  SCCS/s.version.c:
  
+ D 5.54	86/07/21 12:21:11	bloom	476	475	00000/00000/00015
+ add MX support
+ 
+ D 5.53	86/06/30 16:20:56	bloom	475	474	00000/00000/00015
+ try multiple addresses in SMTP connect
+ 
+ D 5.52	86/05/06 18:04:16	bloom	474	473	00000/00000/00015
+ Fix problem with not closing sockets upon errors when opening connections
+ 
  D 5.51	86/05/02 16:28:28	bloom	473	472	00000/00000/00015
  statistics structure moved to its own header file so it may be used by 
  aux/mailstats
***************
*** 2046,2052 ****
  main.o
  	 Copyright (c) 1980 Regents of the University of California.
  	main.c	5.11 (Berkeley) 1/30/86
! 	sendmail.h	5.8		1/10/86
  collect.o
  	collect.c	5.2 (Berkeley) 6/8/85
  parseaddr.o
--- 2055,2061 ----
  main.o
  	 Copyright (c) 1980 Regents of the University of California.
  	main.c	5.11 (Berkeley) 1/30/86
! 	sendmail.h	5.9		7/21/86
  collect.o
  	collect.c	5.2 (Berkeley) 6/8/85
  parseaddr.o
***************
*** 2054,2060 ****
  alias.o
  	alias.c	5.13 (Berkeley) 4/17/86	(with DBM)
  deliver.o
! 	deliver.c	5.10 (Berkeley) 3/2/86
  savemail.o
  	savemail.c	5.7 (Berkeley) 12/7/85
  err.o
--- 2063,2069 ----
  alias.o
  	alias.c	5.13 (Berkeley) 4/17/86	(with DBM)
  deliver.o
! 	deliver.c	5.11 (Berkeley) 7/21/86
  savemail.o
  	savemail.c	5.7 (Berkeley) 12/7/85
  err.o
***************
*** 2070,2076 ****
  stats.o
  	stats.c	5.8 (Berkeley) 5/2/86
  daemon.o
! 	daemon.c	5.18 (Berkeley) 4/2/86 (with daemon mode)
  usersmtp.o
  	usersmtp.c	5.7 (Berkeley) 4/2/86
  srvrsmtp.o
--- 2079,2085 ----
  stats.o
  	stats.c	5.8 (Berkeley) 5/2/86
  daemon.o
! 	daemon.c	5.21 (Berkeley) 7/21/86 (with daemon mode)
  usersmtp.o
  	usersmtp.c	5.7 (Berkeley) 4/2/86
  srvrsmtp.o
***************
*** 2087,2092 ****
--- 2096,2103 ----
  	trace.c	5.2 (Berkeley) 6/7/85
  envelope.o
  	envelope.c	5.12 (Berkeley) 12/17/85
+ domain.o
+ 	domain.c	5.3 (Berkeley) 7/21/86
  sysexits.o
  	sysexits.c	5.2 (Berkeley) 6/7/85
  arpadate.o
