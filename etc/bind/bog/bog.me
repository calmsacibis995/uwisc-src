.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)00macs.me	6.2 (Berkeley) 5/14/86
.\"
.\" usage:	troff -me myfile
.nr EX 0
.de BX
.sp
.ba +4
.lp
.nr EX +1
.b
.ta (\\n(.lu-\\n(.iu)R
EXAMPLE \\n(EX:	\(*D
.r
.lp
..
.de EX
.br
.ba
.b
.tl '''\(gr'
.r
.lp
..
.if \nl .ls 2
.if t .nr bi 5m
.nr si 3n
.de $0		\" create a table of contents magically.
.(x
.ti (\\$3u-1u)*2m
\\$2.  \\$1
.)x
..
.de $1
.sp
..
.de BU
.ip "\ \(bu" \w'\ \(bu\ 'u
..
.de SM
\s-1\\$1\s0\\$2
..
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)00title.me	6.3 (Berkeley) 5/20/86
.\"
.+c
.(l C
.sz 14
.b "Name Server Operations Guide"
.b "for BIND"
.sz
\fIRelease 4.3\fP
.eh 'SMM:11-%''Name Server Operations Guide for BIND'
.oh 'Name Server Operations Guide for BIND''SMM:11-%'
.sp
Kevin J. Dunlap*
.sp \n(psu
Computer Systems Research Group
Computer Science Division
Department of Electrical Engineering and Computer Sciences
University of California
Berkeley  CA  94720
.)l
.sp 2
.(f
* The author is an employee of Digital Equipment Corporation's Ultrix
Engineering Advanced Development Group and is on loan to CSRG.  Ultrix
is a trademark of Digital Equipment Corporation.
.)f
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)intro.me	6.1 (Berkeley) 5/7/86
.\"
.sh 1 Introduction
.pp
The Berkeley Internet Name Domain (BIND) Server implements
the DARPA Internet name server for the UNIX\(dg operating system.
.(f
\(dgUNIX is a Trademark of AT&T Bell Laboratories
.)f
A name server is a network service that enables clients to name
resources or objects and share this information with other objects
in the network.  
This in effect is a distributed data base system for 
objects in a computer network.
BIND is fully intergrated into 4.3BSD network programs for use in storing and 
retrieving host names and address.
The system administrator can configure the system to use BIND
as a replacement to the original host table lookup of information in the 
network hosts file \fI/\|etc/\|hosts\fP.
The default configuration for 4.3BSD uses BIND.
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)build.me	6.1 (Berkeley) 5/7/86
.\"
.sh 1 "Building A System with a Name Server"
.pp
BIND is comprised of two parts.  One is the user interface called the 
\fIresolver\fP
which consists of a group of routines that reside in the C library 
\fI/lib/libc.a\fP.
Second is the actual server called \fInamed\fP.
This is a daemon that runs in the background and services queries on a 
given network port. The standard port for UDP and TCP is specified in 
\fI/\|etc/\|services\fP.
.sh 2 "Resolver Routines in libc"
.pp
When building your 4.3BSD system you may either
build the C library to use the name server resolver routines 
or use the host table lookup routines to do host name and address resolution.
The default resolver for 4.3BSD uses the name server.
.pp
Building the C library to use the name server changes the way
\fIgethostbyname\fP\|(3N), \fIgethostbyaddr\fP\|(3N), and \fIsethostent\fP\|(3N)
do their functions.
The name server renders \fIgethostent\fP\|(3N) obsolete,
since it has no concept of a next line in the database.
These library calls are built with the resolver routines needed
to query the name server.
.pp
The \fIresolver\fP is comprised of a few routines that build query
packets and exchange them with the name server.
.pp
Before building the C library, set the variable \fIHOSTLOOKUP\fP
equal to \fInamed\fP in \fI/\|usr/\|src/\|lib/\|libc/\|Makefile\fP. 
You then make and install the C library and compiler and then
compile the rest of the 4.3BSD system.  For more information
see section 6.6 of ``Installing and Operating 4.3BSD on the VAX\(dd''.
.(f
\(ddVAX is a Trademark of Digital Equipment Corporation
.)f

.sh 2 "The Name Service"
.pp
The basic function of the name server is to provide information about network
objects by answering queries.  The specifications for this name server
are defined in RFC882, RFC883, RFC973 and RFC974.
These documents can be found in \fI/usr/src/etc/named/doc\fP in 4.3BSD 
or \fIftp\fPed from sri-nic.arpa. It is also recommeded that 
you read the related
manual pages,  \fInamed\fP\|(8),
\fIresolver\fP\|(3),
and \fIresolver\fP\|(5).
.pp
The advantage of using a name server over the host table lookup for
host name resolution is to avoid the need 
for a single centralized clearinghouse for all names.
The authority for this information can be delegated 
to the different organizations on the network responsible for it.
.pp
The host table lookup routines require that the master file
for the entire network be maintained at a central location by a few people.
This works fine for small networks where there are only a few machines and the
different organizations responsible for them cooperate.
But this does not work well for large networks where machines
cross organizational boundaries.
.pp
With the name server, the network can be broken into a hierarchy of domains. 
The name space is organized as a tree according to organizational or
administrative boundaries. 
Each node, called a \fIdomain\fP, is given a label, and the name of the
domain is the concatenation of all the labels of the domains from
the root to the current domain, listed from right to left separated by dots.
A label need only be unique within its domain.
The whole space is partitioned into several areas called \fIzones\fP,
each starting at a domain and extending down to the leaf domains or to
domains where other zones start.  
Zones usually represent administrative boundaries.
An example of a host address for a host at the University of California,
Berkeley would look as follows:
.(b
\fImonet\fP\|\fB.\fP\|\fIBerkeley\fP\|\fB.\fP\|\fIEDU\fP
.)b
The top level domain for educational organizations is EDU;
Berkeley is a subdomain of EDU and monet is the name of the host.
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)types.me	6.1 (Berkeley) 5/7/86
.\"
.sh 1 "Types of Servers"
.pp
There are three types of servers, Master, Caching and Remote.
.sh 2 "Master Servers"
.pp
A Master Server for a domain is the authority for that domain.
This server maintains all the data corresponding to its domain.
Each domain should have at least two master servers, a primary master and 
some secondary masters to provide backup service if the primary 
is unavailable or overloaded.
A server may be a master for multiple domains, being primary for
some domains and secondary for others.
.sh 3 Primary
.pp
A Primary Master Server is a server that loads its data from a file on disk.
This server may also delegate authority to other servers in its domain.
.sh 3 Secondary
.pp
A Secondary Master Server is a server that is delegated authority and receives  
its data for a domain from a primary master server.
At boot time, the secondary server requests 
all the data for the given zone from the primary master server.
This server then periodically checks with the primary server to see
if it needs to update its data.
.sh 2 "Caching Only Server"
.pp
All servers are caching servers. This means that the server
caches the information that it receives for use until the data expires. 
A \fICaching Only Server\fP is a server that is not authoritative for any domain.
This server services queries and asks other servers,
who have the authority, for the information needed.
All servers keep data in their cache until the data expires,
based on a time to live field attached to the data when it is received
from another server.
.sh 2 "Remote Server"
.pp
A Remote Server is an option given to people who would like to use 
a name server on their workstation or on a machine that has a limited
amount of memory and CPU cycles.
With this option you can run all of the networking programs that use
the name server without the name server running on the local machine.
All of the queries are serviced by a name server that is running on another 
machine on the network.
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)setup.me	6.1 (Berkeley) 5/7/86
.\"
.sh 1 "Setting up Your Own Domain"
.pp
When setting up a domain that is going to be on a public
network the site administrator should contact the organization 
in charge of the network and request the appropriate domain registration form.  
An organization that belongs to multiple networks (such as \fICSNET\fP,
\fIDARPA Internet\fP and \fIBITNET\fP) should register with only one network.

The contacts are as follows:
.sh 2 "DARPA Internet"
.pp
Sites that are already on the DARPA Internet and need information on 
setting up a domain should contact HOSTMASTER@SRI-NIC\fP\fB\|.\|\fP\fIARPA\|.\fP
You may also want to be placed on the BIND mailing list,
which is a mail group for people on the DARPA Internet running BIND.
The group discusses future design decisions, operational problems,
and other related topic.
The address to request being placed on this mailing list is:
.(b l
\fIbind-request\|@\|ucbarpa\fP\fB\|.\|\fP\fIBerkeley\fP\fB\|.\|\fP\fIEDU\fP\fB.\fP
.)b
.sh 2 CSNET
.pp
A \fICSNET\fP member organization that has not registered its domain
name should contact the \fICSNET\fP Coordination and Information Center
(\fICIC\fP) for an application and information about setting up a domain.
.pp
An organization that already has a registered domain name should
keep the \fICIC\fP informed about how it would like its mail routed.  In
general, the \fICSNET\fP relay will prefer to send mail via \fICSNET\fP (as
opposed to \fIBITNET\fP or the \fIInternet\fP) if possible.  
For an organization on multiple networks, this may not always be the 
preferred behavior.  
The \fICIC\fP can be reached via electronic mail at 
\fIcic\|@\|sh\fP\fB\|.\|\fP\fIcs\fP\fB\|.\|\fP\fInet\fP, or by phone at (617) 497-2777.
.sh 2 BITNET
.pp
If you are on the BITNET and need to set up a domain, contact INFO@BITNIC.
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)files.me	6.3 (Berkeley) 5/20/86
.\"
.sh 1 "Files
.pp
The name server uses several files to load its data base.
This section covers the files and their formats needed for \fInamed\fP.
.sh 2 "Boot File"
.pp
This is the file that is first read when \fInamed\fP starts up.
This tells the server what type of server it is,
which
zones it has authority over and where to get its initial data.
The default location for this file is \fI/\|etc\|/\|named\|.\|boot\fP\|.
However this can be changed
by setting the \fIBOOTFILE\fP variable when you compile \fInamed\fP 
or by specifying
the location on the command line when \fInamed\fP is started up.
.sh 3 "Domain"
.pp
The line in the boot file that designates the default domain 
for the server looks as follows:
.(b l
.ta 0.5i +\w`secondary   `u +\w`berkeley.edu   `u +.5i +.5i
\fIdomain 	Berkeley\fP\fB\|.\|\fP\fIEdu\fP
.)b
.re
The name server uses this information when it receives a query for a
name without a ``\fB.\fP''.
When it receives one of these queries, it appends the name in the second
field to the query name.
.sh 3 "Primary Master"
.pp
The line in the boot file that designates the server as a primary server 
for a zone looks as follows:
.(b l
.ta 0.5i +\w`secondary   `u +\w`berkeley.edu   `u +.5i +.5i
\fIprimary  	Berkeley\fP\fB\|.\|\fP\fIEdu	/etc/ucbhosts\fP
.)b
.re
The first field specifies that the server is a primary one for the zone 
stated in the second field.
The third field is the name of the file from which the data is read.
.sh 3 "Secondary Master"
.pp
The line for a secondary server is similar to the primary except
for the word secondary and the third field.
.(b l
.ta 0.5i +\w`secondary   `u +\w`berkeley.edu   `u +.5i +.5i
\fIsecondary	Berkeley\fP\fB\|.\|\fP\fIEdu	128\fP\fB.\fP\fI32\fP\fB.\fP\fI0\fP\fB.\fP\fI10	\fP\fI128\fP\fB.\fP\fI32\fP\fB.\fP\fI0\fP\fB.\fP\fI4\fP
.)b
.re
The first field specifies that the server is a secondary master server for
the zone stated in the second field.
The rest of the line, lists the network addresses 
for the name servers that are primary for the zone.
The secondary server gets its data across the network from the listed servers.
Each server is tried in the order listed until it successfully receives the data
from a listed server.
.sh 3 "Caching Only Server"
.pp
You do not need a special line to designate that a server is a caching server.
What denotes a caching only server is the absence of authority
lines, such as \fIsecondary\fP or \fIprimary\fP in the boot file.
.pp
All servers should have a line as follows in the boot file to
prime the name servers cache:
.(b l
\fIcache		\fP\fB.\fP\fI	/etc/named\fP\fB.\fP\fIca\fP
.)b
For information on cache file see section on \fICache Initialization\fP.
.sh 3 "Remote Server"
.pp
To set up a host that will use a remote server instead of a local
server to answer queries, the file \fI/\|etc/\|resolv\|.\|conf\fP 
needs to be created.
This file designates the name servers on the network that should 
be sent queries.
It is not advisable to create this file if you have a local server
running.  If this file exists it is read almost every time
\fIgethostbyname\|()\fP or \fIgethostbyaddr\|()\fP is called.
.sh 2 "Cache Initialization"
.sh 3 named.ca
.pp
The name server needs to know the server that is the authoritative 
name server for the network.
To do this we have to prime the name server's cache with the address
of these higher authorities.  
The location of this file is specified in the boot file.
This file uses the Standard Resource Record Format covered further on
in this paper.
.sh 2 "Domain Data Files"
.pp
There are three standard files for specifying the data for a 
domain.  These are \fInamed\|.\|local\fP, \fIhosts\fP and \fIhost\|.\|rev\fP.
These files use the Standard Resource Record Format covered later
in this paper.
.sh 3 named\|.\|local
.pp
This file specifies the address for the local loopback interface,
better known as \fIlocalhost\fP with the network address 127.0.0.1.
The location of this file is specified in the boot file.
.sh 3 hosts
.pp
This file contains all the data about the machines in this zone.
The location of this file is specified in the boot file.
.sh 3 hosts\|.\|rev
.pp
This file specifies the IN-ADDR\|.\|ARPA domain.
This is a special domain for allowing address to name mapping.
As internet host addresses do not fall within domain boundaries,
this special domain was formed to allow inverse mapping.
The IN-ADDR\|.\|ARPA domain has four
labels preceding it. These labels correspond to the 4 octets of
an Internet address. 
All four octets must be specified even if an octets is zero.
The Internet address 128.32.0.4 is located in the domain
4\|.\|0\|.\|32\|.\|128\|.\|IN-ADDR\|.\|ARPA.
This reversal of the address is awkward to read but allows 
for the natural grouping of hosts in a network.
.sh 2 "Standard Resource Record Format"
.pp
The records in the name server data files are called resource records.
The Standard Resource Record Format (RR) is specified in RFC882 and RFC973.
The following is a general description of these records:
.TS
l l l l l.
\fI{name}	{ttl}	addr-class	Record Type	Record Specific data\fP 
.TE
Resource records have a standard format shown above.
The first field is always the name of the domain record.
For some RR's the name may be left blank;
in that case it takes on the name of the previous RR.
The second field is an optional time to live field.
This specifies how long this data will be stored in the data base.
By leaving this field blank the default time to live is specified
in the \fIStart Of Authority\fP resource record (see below).
The third field is the address class; there are currently two classes:
\fIIN\fP for internet addresses and \fIANY\fP for all address classes.
The fourth field states the type of the resource record.
The fields after that are dependent on the type of the RR.
Case is preserved in names and data fields when loaded into the name server.
All comparisons and lookups in the name server data base are case insensitive.
.bl
.b
The following characters have special meanings:
.ip \fB.\fP
A free standing dot in the name field refers to the current domain.
.ip @
A free standing @ in the name field denotes the current origin.
.ip "\fB.\|.\fP"
Two free standing dots represent the null domain name of the root when used in 
the name field.
.ip "\\\X"
Where X is any character other than a digit (0-9),
quotes that character so that its special meaning does not apply.
For example, ``\e.'' can be used to place a dot character in a label.
.ip "\\\DDD"
Where each D is a digit, is the octet corresponding to the
decimal number described by DDD.  
The resulting octet is assumed to be text and 
is not checked for special meaning.
.ip "( )"
Parentheses are used to group data that crosses a line.  
In effect, line terminations are not recognized within parentheses.
.ip ";"
Semicolon starts a comment; the remainder of the line is ignored.
.ip "*"
An asterisk signifies wildcarding.
.pp
Most resource records will have the current origin appended to names if they
are not terminated by a ``\fB.\fP''.  
This is useful for appending the current domain name to the data,
such as machine names, but may cause problems where you do not want 
this to happen.
A good rule of thumb is that, if the name is not in of the domain for which
you are creating the data file, end the name with a ``\fB.\fP''.
.sh 3 $INCLUDE
.pp
An include line begins with $INCLUDE, starting in column 1,
and is followed by a file name.
This feature is
particularly useful for separating different types of data into multiple files.
An example would be:
.(b l
$INCLUDE /usr/named/data/mailboxs
.)b
The line would be interpreted as a request to load the file
\fI/usr/named/data/mailboxes\fP.
The $INCLUDE command does not cause data to be loaded into a
different zone or tree. This is simply a way to allow data for a
given zone to be organized in separate files.  For example,
mailbox data might be kept separately from host data using this
mechanism.
.sh 3 $ORIGIN
.pp
The origin is a way of changing the origin in a data file. 
The line starts in column 1, and is followed by a domain origin. 
This is useful for putting more then one domain in a data file.
.sh 3 "SOA - Start Of Authority"
.(b L
.TS
l l l l l l.
\fIname	{ttl}	addr-class	SOA	Origin	Person in charge\fP
@		IN	SOA	ucbvax\fB.\fPBerkeley\fB.\fPEdu\fB.\fP	kjd\fB.\fPucbvax\fB.\fPBerkeley\fB.\fPEdu\fB.\fP (
			1\|.\|1	; Serial
			3600	; Refresh
			300	; Retry
			3600000	; Expire
			3600 )	; Minimum
.TE
.)b
The \fIStart of Authority, SOA,\fP record designates the start of a zone.
The name is the name of the zone.  
Origin is the name of the host on which this data file resides.
Person in charge is the mailing address for the person responsible
for the name server.
The serial number is the version number of this data file,
this number should be incremented whenever a change is made to the data.
The name server cannot handle numbers over 9999 after the decimal point.
The refresh indicates how often, in seconds, a secondary name servers
is to check with the primary name server to see if an update is needed.
The retry indicates how long, in seconds, a secondary server is to retry 
after a failure to check for a refresh.
Expire is the upper limit, in seconds, that a secondary name server
is to use the data before it expires for lack of getting a refresh.
Minimum is the default number of seconds to be used for the time to live
field on resource records.
There should only be one \fISOA\fP record per zone.
.sh 3 "NS - Name Server"
.TS
l l l l l.
\fI{name}	{ttl}	addr-class	NS	Name servers name\fP
		IN	NS	ucbarpa\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB.\fP
.TE
The \fIName Server\fP record, \fINS\fP, lists a name server responsible 
for a given domain.
The first name field lists the domain that is serviced by 
the listed name server.
There should be one \fINS\fP record for each Primary Master 
server for the domain.
.sh 3 "A - Address"
.TS
l l l l l.
\fI{name}	{ttl}	addr-class	A	address\fP
ucbarpa		IN	A	128\fB.\fP32\fB.\fP0\fB.\fP4
		IN	A	10\fB.\fP0\fB.\fP0\fB.\fP78
.TE
The \fIAddress\fP record, \fIA\fP, lists the address for a given machine. 
The name field is the machine name and the address is the network address.
There should be one \fIA\fP record for each address of the machine. 
.sh 3 "HINFO - Host Information"
.TS
l l l l l l. 
\fI{name}	{ttl}	addr-class	HINFO	Hardware	OS\fP
		ANY	HINFO	VAX-11/780	UNIX
.TE
\fIHost Information\fP resource record, \fIHINFO\fP, is for host specific data.
This lists the hardware and operating system that are running at
the listed host.
It should be noted that only a single space separates the hardware info
and the operating system info. 
If you want to include a space in the machine name you must quote the name.
Host information is not specific to any address class, so \fIANY\fP may be used 
for the address class.
There should be one \fIHINFO\fP record for each host.
.(b L
.sh 3 "WKS - Well Known Services"
.TS
l l l l l l l.
\fI{name}	{ttl}	addr-class	WKS	address	protocol	list of services\fP
		IN	WKS	128\fB.\fP32\fB.\fP0\fB.\fP10	UDP	who route timed domain
		IN	WKS	128\fB.\fP32\fB.\fP0\fB.\fP10	TCP	( echo telnet
						discard sunrpc sftp
						uucp-path systat daytime
						netstat qotd nntp
						link chargen ftp 
						auth time whois mtp
						pop rje finger smtp
						supdup hostnames 
						domain
						nameserver )
.TE
The \fIWell Known Services\fP record, \fIWKS\fP, 
describes the well known services
supported by a particular protocol at a specified address.
The list of services and port numbers come from the list of services 
specified in \fI/etc/services.\fP
There should be only one \fIWKS\fP record per protocol per address.
.)b
.sh 3 "CNAME - Canonical Name"
.TS
l l l l l. 
\fIaliases	{ttl}	addr-class	CNAME	Canonical name\fP
ucbmonet		IN	CNAME	monet
.TE
\fICanonical Name\fP resource record, \fICNAME\fP, specifies an 
alias for a canonical name.
An alias should be unique and all other resource records should be
associated with the canonical name and not with the alias.
Do not create an alias and then use it in other resource records.
.sh 3 "PTR - Domain Name Pointer"
.TS
l l l l l. 
\fIname	{ttl}	addr-class	PTR	real name\fP
7.0		IN	PTR	monet\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
.TE
A \fIDomain Name Pointer\fP record, \fIPTR\fP, allows special names 
to point to some other location in the domain.  
The above example of a \fIPTR\fP record is used in setting up reverse pointers
for the special \fIIN-ADDR\fP\fB\|.\|\fP\fIARPA\fP domain. This line is from the example
\fIhosts.rev\fP file.
\fIPTR\fP names should be unique to the zone.
.sh 3 "MB - Mailbox"
.TS
l l l l l. 
\fIname	{ttl}	addr-class	MB	Machine \fP
miriam		IN	MB	vineyd\fB.\fPDEC\fB.\fPCOM\fB.\fP
.TE
\fIMB\fP is the \fIMailbox\fP record.
This lists the machine where a user wants to receive mail.
The name field is the users login; the machine field denotes the machine
to which mail is to be delivered.
Mail Box names should be unique to the zone.
.sh 3 "MR - Mail Rename Name"
.TS
l l l l l. 
\fIname	{ttl}	addr-class	MR	corresponding MB\fP
Postmistress		IN	MR	miriam 
.TE
\fIMain Rename, MR,\fP can be used to list aliases for a user.
The name field lists the alias for the name listed in the fourth field,
which should have a corresponding \fIMB\fP record.
.sh 3 "MINFO - Mailbox Information"
.TS
l l l l l l. 
\fIname	{ttl}	addr-class	MINFO	requests	maintainer\fP
BIND		IN	MINFO	BIND-REQUEST	kjd\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
.TE
\fIMail Information\fP record, \fIMINFO\fP, creates a mail 
group for a mailing list.
This resource record is usually associated with a mail group \fIMail Group\fP,
but may be used with a \fIMail Box\fP record.
The \fIname\fP specifies the name of the mailbox.
The \fIrequests\fP field
is where mail such as requests to be added to a mail group should be sent.
The \fImaintainer\fP is a mailbox that should receive error messages.
This is particularly appropriate for mailing lists when
errors in members names should be reported to a person other than
the sender.
.sh 3 "MG - Mail Group Member"
.TS
l l l l l l. 
\fI{mail group name}	{ttl}	addr-class	MG	member name\fP
		IN	MG	Bloom
.TE
\fIMail Group, MG\fP lists members of a mail group.

An example for setting up a mailing list is as follows:
.TS
l l l l l l. 
Bind		IN	MINFO	Bind-Request	kjd\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
		IN	MG	Ralph\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
		IN	MG	Zhou\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
		IN	MG	Painter\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
		IN	MG	Riggle\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
		IN	MG	Terry\fB\|.\|\fPpa\fB\|.\|\fPXerox\fB\|.\|\fPCom\fB\|.\fP
.TE
.sh 3 "MX - Mail Exchanger"
.TS
l l l l l l. 
\fIname	{ttl}	addr-class	MX	preference value	mailer exchanger\fP
Munnari\fB\|.\|\fPOZ\fB\|.\|\fPAU\fB\|.\fP		IN	MX	0	Seismo\fB\|.\|\fPCSS\fB\|.\|\fPGOV\fB\|.\fP
*\fB\|.\|\fPIL\fB\|.\fP		IN	MX	0	RELAY\fB\|.\|\fPCS\fB\|.\|\fPNET\fB\|.\fP
.TE
\fIMain Exchanger\fP records, \fIMX\fP, are used to specify a
machine that knows how to deliver
mail to a machine that is not directly connected to the network.
In the first example, above, Seismo\fB\|.\|\fPCSS\fB\|.\|\fPGOV\fB\|.\fP is a mail gateway 
that knows how to 
deliver mail to Munnari\fB\|.\|\fPOZ\fB\|.\|\fPAU\fB\|.\fP but other machines 
on the network can not deliver mail directly to Munnari. 
These two machines may have a private connection or use a different
transport medium.
The preference value is the order that a mailer should follow
when there is more then one way to deliver mail to a single machine.
See RFC974 for more detailed information.
.pp
Wildcard names containing the character ``*'' may be
used for mail routing with \fIMX\fP records.
There are likely to be servers on the network
that simply state that any mail to a domain is to be routed through a relay. 
Second example, above, all mail to hosts in the domain IL is routed through RELAY.CS.NET.
This is done by creating a wildcard resource record,
which states that *.IL has an \fIMX\fP
of RELAY.CS.NET.  
.sh 2 "Sample Files"
.pp
The following section contains sample files for the name server.
This covers example boot files for the different types of servers
and example domain data base files.
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)named.boot.primary	6.2 (Berkeley) 5/14/86
.\"
.sh 3 "Boot File"
.sh 4 "Primary Master Server"
.(b L
.TS
l
l s
l.
;
; Boot file for Primary Master Name Server
;
.TE
.TS
l l l
l
l l l.
; type	domain	source file or host
;
domain	Berkeley\fB.\fPEdu
primary	Berkeley\fB.\fPEdu	/etc/ucbhosts
cache	\fB.\fP	/etc/named\fB.\fPca
primary	32\fB.\fP128\fB.\fPin-addr\fB.\fParpa	/etc/ucbhosts\fB.\fPrev
primary	0\fB.\fP0\fB.\fP127\fB.\fPin-addr\fB.\fParpa	/etc/named\fB.\fPlocal
.TE
.)b
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)named.boot.secondary	6.2 (Berkeley) 5/14/86
.\"
.sh 4 "Secondary Master Server"
.(b L
.TS
l
l s
l.
;
; Boot file for Primary Master Name Server
;
.TE
.TS
l l l
l
l l l.
; type	domain	source file or host
;
domain	Berkeley.Edu
secondary	Berkeley\fB.\fPEdu	128\fB.\fP32\fB.\fP0\fB.\fP4 128\fB.\fP32\fB.\fP0\fB.\fP10 128\fB.\fP32\fB.\fP136\fB.\fP22 
cache	\fB.\fP	/etc/named\fB.\fPca
secondary	32\fB.\fP128\fB.\fPin-addr\fB.\fParpa	128\fB.\fP32\fB.\fP0\fB.\fP4 128\fB.\fP32\fB.\fP0\fB.\fP10 128\fB.\fP32\fB.\fP136\fB.\fP22
primary	0\fB.\fP0\fB.\fP127\fB.\fPin-addr\fB.\fParpa	/etc/named\fB.\fPlocal
.TE
.)b
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)named.boot.cache	6.2 (Berkeley) 5/14/86
.\"
.sh 4 "Caching Only Server"
.(b L 
.TS
l
l s
l.
;
; Boot file for Primary Master Name Server
;
.TE
.TS
l l l
l
l l l.
; type	domain	source file or host
;
domain	Berkeley\fB.\fPEdu
cache	\fB.\fP	/etc/named\fB.\fPca
primary	0\fB.\fP0\fB.\fP127\fB.\fPin-addr\fB.\fParpa	/etc/named\fB.\fPlocal
.TE
.)b


.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)resolv.conf	6.1 (Berkeley) 5/7/86
.\"
.bp
.sh 3 "Remote Server"
.sh 4 "/etc/resolv.conf"
.(b L

domain Berkeley\fB.\fPEdu
nameserver 128\fB.\fP32\fB.\fP0\fB.\fP4
nameserver 128\fB.\fP32\fB.\fP0\fB.\fP10

.)b
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)named.ca	6.1 (Berkeley) 5/7/86
.\"
.sh 3 "named.ca"
.(b L

;
; Initial cache data for root domain servers.
;
.TS
l l l l l. 
\fB\.\fP	99999999	IN	NS	USC-ISIC\fB.\fPARPA\fB.\fP
	99999999	IN	NS	USC-ISIB\fB.\fPARPA\fB.\fP
	99999999	IN	NS	BRL-AOS\fB.\fPARPA\fB.\fP
	99999999	IN	NS	SRI-NIC\fB.\fPARPA\fB.\fP
.T&
l s s s s
l l l l l. 
;  Prep the cache (hotwire the addresses).  
SRI-NIC\fB.\fPARPA\fB.\fP	99999999	IN	A	10\fB.\fP0\fB.\fP0\fB.\fP51
USC-ISIB\fB.\fPARPA\fB.\fP	99999999	IN	A	10\fB.\fP3\fB.\fP0\fB.\fP52
USC-ISIC\fB.\fPARPA\fB.\fP	99999999	IN	A	10\fB.\fP0\fB.\fP0\fB.\fP52
BRL-AOS\fB.\fPARPA\fB.\fP	99999999	IN	A	128\fB.\fP20\fB.\fP1\fB.\fP2
BRL-AOS\fB.\fPARPA\fB.\fP	99999999	IN	A	192\fB.\fP5\fB.\fP22\fB.\fP82
.TE
.)b
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)named.local	6.1 (Berkeley) 5/7/86
.\"
.sh 3 "named.local"
.(b L 

.TS
l l l l. 
@	IN	SOA	ucbvax\fB.\fPBerkeley\fB.\fPEdu. kjd\fB.\fPucbvax\fB.\fPBerkeley\fB.\fPEdu\fB.\fP (
			1       ; Serial
			3600    ; Refresh
			300     ; Retry
			3600000 ; Expire
			3600 )  ; Minimum
	IN	NS	ucbvax\fB.\fPBerkeley\fB.\fPEdu\fB.\fP
1	IN	PTR	localhost\fB.\fP
.TE
.)b
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)ucbhosts	6.1 (Berkeley) 5/7/86
.\"
.bp
.sh 3 "Hosts"
.(b L
;
;    @(#)ucb-hosts    1.1    (berkeley)    86/02/05
;
.TS
l l l l s. 
@	IN	SOA	ucbvax\fB.\fPBerkeley\fB.\fPEdu\fB.\fP kjd\fB.\fPmonet\fB.\fPBerkeley\fB.\fPEdu\fB.\fP (
			1\fB.\fP1       ; Serial
			3600      ; Refresh
			300       ; Retry
			3600000   ; Expire
			3600 )    ; Minimum
	IN	NS	ucbarpa\fB.\fPBerkeley\fB.\fPEdu\fB.\fP
	IN	NS	ucbvax\fB.\fPBerkeley\fB.\fPEdu\fB.\fP
localhost	IN	A	127\fB.\fP1
ucbarpa	IN	A	128\fB.\fP32\fB.\fP4
	IN	A	10\fB.\fP0\fB.\fP0\fB.\fP78
	ANY	HINFO	VAX-11/780 UNIX
arpa	IN	CNAME	ucbarpa
ernie	IN	A	128\fB.\fP32\fB.\fP6
	ANY	HINFO	VAX-11/780 UNIX
ucbernie	IN	CNAME	ernie
monet	IN	A	128\fB.\fP32\fB.\fP7
	IN	A	128\fB.\fP32\fB.\fP130\fB.\fP6
	ANY	HINFO	VAX-11/750 UNIX
ucbmonet	IN	CNAME	monet
ucbvax	IN	A	10\fB.\fP2\fB.\fP0\fB.\fP78
	IN	A	128\fB.\fP32\fB.\fP10
	ANY	HINFO	VAX-11/750 UNIX
	IN	WKS	128\fB.\fP32\fB.\fP0\fB.\fP10 UDP syslog route timed domain
	IN	WKS	128\fB.\fP32\fB.\fP0\fB.\fP10 TCP ( echo telnet
			discard sunrpc sftp
			uucp-path systat daytime
			netstat qotd nntp
			link chargen ftp 
			auth time whois mtp
			pop rje finger smtp
			supdup hostnames 
			domain
			nameserver )
vax	IN	CNAME	ucbvax
toybox	IN	A	128\fB.\fP32\fB.\fP131\fB.\fP119
	ANY	HINFO	Pro350 RT11
toybox	IN	MX	0  monet.Berkeley.Edu
miriam	ANY	MB	vineyd.DEC.COM.
postmistress	ANY	MR	Miriam
Bind	ANY	MINFO	Bind-Request kjd\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
	ANY	MG	Ralph\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
	ANY	MG	Zhou\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
	ANY	MG	Painter\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
	ANY	MG	Riggle\fB\|.\|\fPBerkeley\fB\|.\|\fPEdu\fB\|.\fP
	ANY	MG	Terry\fB\|.\|\fPpa\fB\|.\|\fPXerox\fB\|.\|\fPCom\fB\|.\fP
.TE
.)b
.bp
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)ucbhosts.rev	6.1 (Berkeley) 5/7/86
.\"
.sh 3 "host.rev"
.(b L

;
;    @(#)ucb-hosts.rev    1.1    (Berkeley)    86/02/05
;
.TS
l l l l s. 
@	IN	SOA	ucbvax\fB.\fPBerkeley\fB.\fPEdu\fB.\fP kjd\fB.\fPmonet\fB.\fPBerkeley\fB.\fPEdu\fB.\fP (
			1\fB.\fP1     ; Serial
			3600    ; Refresh
			300     ; Retry
			3600000 ; Expire
			3600 )  ; Minimum
	IN	NS	ucbarpa\fB.\fPBerkeley\fB.\fPEdu\fB.\fP
	IN	NS	ucbvax\fB.\fPBerkeley\fB.\fPEdu\fB.\fP
4\fB.\fP0	IN	PTR	ucbarpa\fB.\fPBerkeley\fB.\fPEdu\fB.\fP
6\fB.\fP0	IN	PTR	ernie\fB.\fPBerkeley\fB.\fPEdu\fB.\fP
7\fB.\fP0	IN	PTR	monet\fB.\fPBerkeley\fB.\fPEdu\fB.\fP
10\fB.\fP0	IN	PTR	ucbvax\fB.\fPBerkeley\fB.\fPEdu\fB.\fP
6\fB.\fP130	IN	PTR	monet\fB.\fPBerkeley\fB.\fPEdu\fB.\fP
.TE
.)b



.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)manage.me	6.4 (Berkeley) 5/20/86
.\"
.sh 1 "Domain Management"
.pp
This section contains information for starting, 
controlling and debugging \fInamed\fP.
.sh 2 /etc/rc.local
.pp
The hostname should be set to the full domain style name in \fI/etc/rc.local\fP
using \fIhostname\|(1)\fP.
The following entry should be added to \fI/etc/rc.local\fP to start
up \fInamed\fP at system boot time:
.(b l 
\fIif [ -f /etc/named ]; then
	/etc/named\fP [options] \fI& echo -n ' named'	>/dev/console\fP
\fIfi\fP
.)b
This usually directly follows the lines that start \fIsyslogd\fP.
\fBDo Not\fP attempt to run \fInamed\fP from \fIinetd\fP.
This will
continuously restart the name server and defeat the purpose of having a cache.
.sh 2 /etc/named.pid
.pp
When \fInamed\fP is successfully started up it writes its process id
into the file \fI/etc/named.pid\fP.  This is useful to programs
that want to send signals to \fInamed\fP. The name of this file may be changed
by defining \fIPIDFILE\fP to the new name when compiling \fInamed\fP.
.sh 2 /etc/hosts
.pp
The \fIgethostbyname\|()\fP library call can detect if \fInamed\fP is running.
If it is determined that \fInamed\fP is not running it will look in
\fI/etc/hosts\fP to resolve an address.  
This option was added to allow \fIifconfg\|(8C)\fP to configure the machines
local interfaces and to enable a system manager to access the network 
while the system is in single user mode.
It is advisable to put the local machines interface addresses and a couple of 
machine names and address in 
\fI/etc/hosts\fP so the system manager can rcp files from another machine
when the system is in single user mode.
The format of \fI/etc/host\fP has not changed. See \fIhosts\|(5)\fP
for more information.
Since the process of reading \fI/etc/hosts\fP is slow, 
it is not advised to use this option when the system is in multi user mode.

.sh 2 Signals
.pp
There are several signals that can be sent to the \fInamed\fP process 
to have it do tasks without restarting the process.
.sh 3 Reload
.pp
SIGHUP -
Causes \fInamed\fP to read \fInamed.boot\fP and reload the database.
All previously cached data is lost.
This is useful when you have made a change to a data file 
and you want \fInamed\fP\|'s internal database to reflect the change.
.sh 3 Debugging
.pp
When \fInamed\fP is running incorrectly, look first in 
\fI/usr/adm/messages\fP and check for any messages logged by \fIsyslog\fP.
Next send it a signal to see what is happening.
.pp
SIGINT -
Dumps the current data base and cache to
\fI/usr/\|tmp/\|named_dump\|.\|db\fP
This should give you an indication to whether the data base was loaded
correctly.
The name of the dump file may be changed
by defining \fIDUMPFILE\fP to the new name when compiling \fInamed\fP.

\fINote:\fP the following two signals only work when \fInamed\fP is built with
\fIDEBUG\fP defined.
.pp
SIGUSR1 -
Turns on debugging. Each following USR1 increments the debug level.
The output goes to \fI/usr/tmp/named.run\fP
The name of this debug file may be changed
by defining \fIDEBUGFILE\fP to the new name before compiling \fInamed\fP.
.pp
SIGUSR2 -
Turns off debugging completely.

For more detailed debugging, define DEBUG when compiling the resolver
routines into \fI/lib/libc.a\fP.
.sx 0
.sp 2
.ce
.b ACKNOWLEDGEMENTS
.pp
Many thanks to the users at U.C. Berkeley for falling into many of the
holes involved with integrating BIND into the system so that others
would be spared the trauma.  I would also like to extend gratitude to
Jim McGinness and Digital Equipment Corporation for permitting 
me to spend most of my time on this project.
.pp
Ralph Campbell, Doug Kingston, Craig Partridge, Smoot Carl-Mitchell,
Mike Muuss and everyone else on the DARPA Internet who has contributed 
to the development of BIND.
To the members of the original BIND project, Douglas Terry, Mark Painter,
David Riggle and Songnian Zhou.
.pp
Anne Hughes, Jim Bloom and Kirk McKusick and the many others who have
reviewed this paper giving considerable advice.
.pp
This work was sponsored by the Defense Advanced Research Projects Agency
(DoD), Arpa Order No. 4871 monitored by the Naval Electronics Systems
Command under contract No. N00039-84-C-0089.
The views and conclusions contained in this document are those of the
authors and should not be interpreted as representing official policies,
either expressed or implied, of the Defense Research Projects Agency,
of the US Government, or of Digital Equipment Corporation.
.bp
.ba 0
.in 0
.sp 2
.ce
.b REFERENCES
.sp
.nr ii 1i
.ip [Birrell]
Birrell, A. D.,
Levin, R.,
Needham, R. M.,
and Schroeder, M.D.,
.q "Grapevine: An Exercise in Distributed Computing."
In
.ul
Comm. A.C.M. 25,
4:260-274
April 1982.
.ip [RFC819]
Su, Z.
Postel, J.,
.q "The Domain Naming Convention for Internet User Applications."
.ul
Internet Request For Comment 819
Network Information Center,
SRI International,
Menlo Park, California.
August 1982.
.ip [RFC882]
Mockapetris, P.,
.q "Domain Names - Concept and Facilities."
.ul
Internet Request For Comment 882
Network Information Center,
SRI International,
Menlo Park, California.
November 1983.
.ip [RFC883]
Mockapetris, P.,
.q "Domain Names - Implementation and Specification."
.ul
Internet Request For Comment 883
Network Information Center,
SRI International,
Menlo Park, California.
November 1983.
.ip [RFC973]
Mockapetris, P.,
.q "Domain System Changes and Observations."
.ul
Internet Request For Comment 973
Network Information Center,
SRI International,
Menlo Park, California.
February 1986.
.ip [RFC974]
Partridge, C.,
.q "Mail Routing and The Domain System."
.ul
Internet Request For Comment 974
Network Information Center,
SRI International,
Menlo Park, California.
February 1986.
.ip [Terry]
Terry, D. B.,
Painter, M.,
Riggle, D. W.,
and
Zhou, S.,
.ul
The Berkeley Internet Name Domain Server.
Proceedings USENIX Summer Conference,
Salt Lake City, Utah.
June 1984, pages 23-31.
.ip [Zhou]
Zhou, S.,
.ul
The Design and Implementation of the Berkeley Internet Name Domain (BIND) Servers.
UCB/CSD 84/177.
University of California, Berkeley,
Computer Science Division.
May 1984.
